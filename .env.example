# ---- .env (example) ----

# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# The following `prisma+postgres` URL is similar to the URL produced by running a local Prisma Postgres
# server with the `prisma dev` CLI command, when not choosing any non-default ports or settings. The API key, unlike the
# one found in a remote Prisma Postgres URL, does not contain any sensitive information.

# Connect to Supabase via connection pooling
DATABASE_URL="postgresql://postgres.[id]:[pass]@aws-1-us-east-2.pooler.supabase.com:6543/postgres?pgbouncer=true"

# Direct connection to the database. Used for migrations
DIRECT_URL="postgresql://postgres.[id]:[pass]@aws-1-us-east-2.pooler.supabase.com:5432/postgres"


# ---- .env.local ----

# For client/server Supabase SDK (auth later)
NEXT_PUBLIC_SUPABASE_URL=https://[id].supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=fromSupabase
ALLOWED_ADMIN_EMAILS=
SUPABASE_SERVICE_ROLE_KEY=fromSupabase
NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=fromCloud
NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET=tableName

# For Prisma (direct Postgres connection)
# Get the URI from: Project Settings → Database → Connection string → URI
# Add the Prisma-friendly params:
# DATABASE_URL="postgresql://USER:PASSWORD@HOST:PORT/DB?pgbouncer=true&connection_limit=1&sslmode=require"

# Connect to Supabase via connection pooling
DATABASE_URL="postgresql://postgres.[id]:[pass]@aws-1-us-east-2.pooler.supabase.com:6543/postgres?pgbouncer=true"

# Direct connection to the database. Used for migrations
DIRECT_URL="postgresql://postgres.[id]:[pass]@aws-1-us-east-2.pooler.supabase.com:5432/postgres"
