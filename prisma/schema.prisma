generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum ProfileStatus {
  active
  retired
  deleted
}

model Profile {
  id              String         @id @default(uuid())
  userId          String         @unique @db.Uuid
  handle          String         @unique
  displayName     String
  avatarUrl       String?
  bio             String?
  iRating         Int?
  socials         Json?
  marketingOptIn  Boolean        @default(true)
  status          ProfileStatus  @default(active)

  roles           ProfileRole[]

  eid             String?        @unique
  gradYear        Int?
  signedUpAt      DateTime       @default(now())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Role {
  id       String        @id @default(cuid())
  // machine code (what we filter on): "member" | "competition" | "officer" | "president" | "alumni"
  code     String        @unique
  // human label (what we show)
  name     String
  profiles ProfileRole[]
}

model ProfileRole {
  profileId String
  roleId    String

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  role      Role    @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([profileId, roleId])
  @@index([roleId])
}
